generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./storage.db?socket_timeout=100&connection_limit=10"
}

model User {
  id                 String      @id @unique @default(uuid())
  currentWorkspaceId String?
  workspaces         Workspace[]
  settings           Settings?
}

model Settings {
  id     String @id @unique @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Workspace {
  id                String       @id @unique @default(uuid())
  owner             User         @relation(fields: [userId], references: [id])
  name              String
  userId            String
  collections       Collection[]
  currentCollection String?
}

model Collection {
  id             String    @id @unique @default(uuid())
  name           String
  owner          Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId    String
  children       Request[]
  currentRequest String?
  paths          Path[]
  tabs           Tab[]
}

model Tab {
  id           String      @id @unique @default(uuid())
  Request      Request     @relation(fields: [requestId], references: [id])
  requestId    String
  Collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId String?
}

model Path {
  id           String      @id @unique @default(uuid())
  value        String
  Collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId String?
}

model Request {
  id              String      @id @unique @default(uuid())
  path            String
  name            String
  owner           Collection? @relation(fields: [collectionId], references: [id])
  url             String
  method          String      @default("GET")
  headers         String?     @default("{}")
  body            String?
  authentication  String?
  documentation   String
  contentType     String?
  responses       Response[]
  collectionId    String?
  currentResponse String?
  Tab             Tab[]
}

model Response {
  id      String  @id @unique @default(uuid())
  ownerId String
  owner   Request @relation(fields: [ownerId], references: [id])
}
